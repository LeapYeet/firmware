/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_MESHTASTIC_MESHTASTIC_FRIENDFINDER_PB_H_INCLUDED
#define PB_MESHTASTIC_MESHTASTIC_FRIENDFINDER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Defines the type of request or update being sent. */
typedef enum _meshtastic_FriendFinder_RequestType {
    meshtastic_FriendFinder_RequestType_NONE = 0, /* A standard, periodic data update. */
    meshtastic_FriendFinder_RequestType_REQUEST = 1, /* A request from one user to start a tracking session with another. */
    meshtastic_FriendFinder_RequestType_ACCEPT = 2, /* A response to a REQUEST, accepting the session. */
    meshtastic_FriendFinder_RequestType_REJECT = 3, /* A response to a REQUEST, rejecting the session. */
    meshtastic_FriendFinder_RequestType_END_SESSION = 4 /* A notification that the tracking session has been terminated. */
} meshtastic_FriendFinder_RequestType;

/* Struct definitions */
/* Message for the FriendFinder module.
 This message is sent between two nodes to establish and maintain a tracking session. */
typedef struct _meshtastic_FriendFinder {
    /* The purpose of this particular packet (for handshaking or data update). */
    meshtastic_FriendFinder_RequestType request_type;
    /* GPS latitude, encoded as integer. Divide by 1e7 to get degrees. */
    int32_t latitude_i;
    /* GPS longitude, encoded as integer. Divide by 1e7 to get degrees. */
    int32_t longitude_i;
    /* The unix timestamp of the GPS fix. */
    uint32_t time;
    /* The battery level of the sending device (0-100). */
    uint32_t battery_level;
    /* The number of satellites used for the GPS fix. */
    uint32_t sats_in_view;
} meshtastic_FriendFinder;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _meshtastic_FriendFinder_RequestType_MIN meshtastic_FriendFinder_RequestType_NONE
#define _meshtastic_FriendFinder_RequestType_MAX meshtastic_FriendFinder_RequestType_END_SESSION
#define _meshtastic_FriendFinder_RequestType_ARRAYSIZE ((meshtastic_FriendFinder_RequestType)(meshtastic_FriendFinder_RequestType_END_SESSION+1))

#define meshtastic_FriendFinder_request_type_ENUMTYPE meshtastic_FriendFinder_RequestType


/* Initializer values for message structs */
#define meshtastic_FriendFinder_init_default     {_meshtastic_FriendFinder_RequestType_MIN, 0, 0, 0, 0, 0}
#define meshtastic_FriendFinder_init_zero        {_meshtastic_FriendFinder_RequestType_MIN, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define meshtastic_FriendFinder_request_type_tag 1
#define meshtastic_FriendFinder_latitude_i_tag   2
#define meshtastic_FriendFinder_longitude_i_tag  3
#define meshtastic_FriendFinder_time_tag         4
#define meshtastic_FriendFinder_battery_level_tag 5
#define meshtastic_FriendFinder_sats_in_view_tag 6

/* Struct field encoding specification for nanopb */
#define meshtastic_FriendFinder_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    request_type,      1) \
X(a, STATIC,   SINGULAR, SFIXED32, latitude_i,        2) \
X(a, STATIC,   SINGULAR, SFIXED32, longitude_i,       3) \
X(a, STATIC,   SINGULAR, UINT32,   time,              4) \
X(a, STATIC,   SINGULAR, UINT32,   battery_level,     5) \
X(a, STATIC,   SINGULAR, UINT32,   sats_in_view,      6)
#define meshtastic_FriendFinder_CALLBACK NULL
#define meshtastic_FriendFinder_DEFAULT NULL

extern const pb_msgdesc_t meshtastic_FriendFinder_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define meshtastic_FriendFinder_fields &meshtastic_FriendFinder_msg

/* Maximum encoded size of messages (where known) */
#define MESHTASTIC_MESHTASTIC_FRIENDFINDER_PB_H_MAX_SIZE meshtastic_FriendFinder_size
#define meshtastic_FriendFinder_size             30

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
